webpackHotUpdate("bundle",{

/***/ "./home/home.component.html":
/***/ (function(module, exports) {

module.exports = "<GridLayout rows=\"auto, *\" ios:marginBottom=\"48\">\r\n    <GridLayout row=\"0\" rowSpan=\"2\" paddingTop=\"30\" class=\"page\" (loaded)=\"onContainerLoaded($event)\" width=\"100%\" height=\"100%\">\r\n        <android>\r\n            <SwipeLayout *ngFor=\"let card of cards |  slice:0:5; let i = index; trackBy: trackingFunction\" [visibility]=\"isLoaded ? 'visible' : 'collapse'\" [animationState]=\"swipeLayoutAnimated\" [gestureMode]=\"gestureMode\" class=\"swipe-layout\" [class.front]=\"i == 0\"\r\n                [class.middle]=\"i == 1\" [class.back]=\"i == 2\" [isUserInteractionEnabled]=\"i == 0\" (loaded)=\"swipeLayoutLoaded($event, btnIgnore, btnLike, badgeLike, badgeIgnore)\" (swipeLeft)=\"swipeLeftCallback($event, card)\" (swipeRight)=\"swipeRightCallback($event, card)\">\r\n                <StackLayout class=\"main-card \">\r\n                    <GridLayout rows=\"*, auto, *\" columns=\"8, auto, *, auto, 8\" class=\"main-card-container\">\r\n\r\n                        <GridLayout #badgeLike col=\"0\" colSpan=\"5\" row=\"0\" class=\"btn btn-square card-badge m-l-16\" horizontalAlignment=\"left\" opacity=\"0\">\r\n                            <Image src=\"~/images/pruefen.png\" class=\"image\"></Image>\r\n                        </GridLayout>\r\n                        <GridLayout #badgeIgnore col=\"0\" colSpan=\"5\" row=\"0\" class=\"btn btn-square card-badge m-r-16\" horizontalAlignment=\"right\" opacity=\"0\">\r\n                            <Image src=\"~/images/schliessen.png\" class=\"image\"></Image>\r\n                        </GridLayout>\r\n\r\n\r\n                        <GridLayout col=\"0\" row=\"1\" colSpan=\"5\" rows=\"auto, auto, auto\" columns=\"auto, *, auto\" class=\"info\" style=\"background: white;\r\n                        \">\r\n                            <!--                   <Label col=\"0\" row=\"0\" colSpan=\"2\" class=\"h5 date\"\r\n                            textWrap=\"true\">\r\n                            <FormattedString>\r\n                                <Span text=\"&#xf073; \" class=\"fa\"></Span>\r\n                                <Span [text]=\"card.date\"></Span>\r\n                            </FormattedString> \r\n                        </Label>-->\r\n                            <Label col=\"0\" row=\"1\" colSpan=\"2\" [text]=\"card.text\" textWrap=\"true\" class=\"h1 title\"></Label>\r\n                            <!--                             <circular-progress-bar [col]=\"2\" [row]=\"1\" [rowSpan]=\"2\" [progress]=\"card.popularity\"></circular-progress-bar>\r\n -->\r\n                        </GridLayout>\r\n\r\n                        <!-- <Image col=\"0\" row=\"0\" colSpan=\"5\" rowSpan=\"6\" [src]=\"card.image\"\r\n                            stretch=\"aspectFill\" borderRadius=\"10\"></Image> -->\r\n\r\n\r\n                        <GridLayout #btnIgnore col=\"1\" row=\"2\" class=\"btn btn-square\" style=\"width: 25%; height: 25%; margin-left: 50px;\" [isUserInteractionEnabled]=\"i == 0\" (tap)=\"decline(card)\">\r\n                            <Image src=\"~/images/schliessen.png\" style=\"width: 100%; height: 100%;\" class=\"image\"></Image>\r\n                        </GridLayout>\r\n\r\n                        <GridLayout #btnLike col=\"3\" row=\"2\" style=\"width: 25%; height: 25%; margin-right: 50px;\" class=\"btn btn-square\" [isUserInteractionEnabled]=\"i == 0\" (tap)=\"like(card)\">\r\n                          <i class=\"fa fa-thumbs-up\" width=\"100%%\"></i>\r\n                        </GridLayout>\r\n\r\n\r\n                    </GridLayout>\r\n                </StackLayout>\r\n            </SwipeLayout>\r\n        </android>\r\n        <ios>\r\n            <SwipeLayout *ngFor=\"let card of cards |  slice:0:5; let i = index; trackBy: trackingFunction\" [visibility]=\"isLoaded ? 'visible' : 'collapse'\" [animationState]=\"swipeLayoutAnimated\" [gestureMode]=\"gestureMode\" class=\"swipe-layout\" [class.front]=\"i == 0\"\r\n                [class.middle]=\"i == 1\" [class.back]=\"i == 2\" [isUserInteractionEnabled]=\"i == 0\" (loaded)=\"swipeLayoutLoaded($event, btnIgnore, btnLike, badgeLike, badgeIgnore)\" (swipeLeft)=\"swipeLeftCallback($event, card)\" (swipeRight)=\"swipeRightCallback($event, card)\">\r\n                <CardView class=\"main-card dark\" shadowOffsetHeight=\"2\" shadowColor=\"#000000\" shadowOpacity=\"0.2\" shadowRadius=\"30\">\r\n                    <GridLayout>\r\n                        <GridLayout rows=\"*, auto, *\" columns=\"8, auto, *, auto, 8\" class=\"main-card-container\">\r\n\r\n                            <GridLayout #badgeLike col=\"0\" colSpan=\"5\" row=\"0\" class=\"btn btn-square card-badge m-l-16\" horizontalAlignment=\"left\" opacity=\"0\">\r\n                                <Image src=\"~/images/star.png\" class=\"image\"></Image>\r\n                            </GridLayout>\r\n                            <GridLayout #badgeIgnore col=\"0\" colSpan=\"5\" row=\"0\" class=\"btn btn-square card-badge m-r-16\" horizontalAlignment=\"right\" opacity=\"0\">\r\n                                <Image src=\"~/images/cancel.png\" class=\"image\"></Image>\r\n                            </GridLayout>\r\n\r\n                            <Image col=\"0\" row=\"0\" colSpan=\"5\" rowSpan=\"6\" [src]=\"card.image\" stretch=\"aspectFill\"></Image>\r\n\r\n                            <GridLayout #btnIgnore col=\"1\" row=\"1\" class=\"btn btn-square\" [isUserInteractionEnabled]=\"i == 0\" (tap)=\"decline(card)\">\r\n                                <Image src=\"~/images/cancel.png\" class=\"image\"></Image>\r\n                            </GridLayout>\r\n                            <GridLayout #btnLike col=\"3\" row=\"1\" class=\"btn btn-square\" [isUserInteractionEnabled]=\"i == 0\" (tap)=\"like(card)\">\r\n                                <Image src=\"~/images/star.png\" class=\"image\"></Image>\r\n                            </GridLayout>\r\n\r\n                            <GridLayout col=\"0\" row=\"2\" colSpan=\"5\" rows=\"auto, auto, auto\" columns=\"auto, *, auto\" class=\"info\">\r\n                                <Label col=\"0\" row=\"0\" colSpan=\"2\" class=\"h5 date\" textWrap=\"true\">\r\n                                    <FormattedString>\r\n\r\n                                        <Span text=\"&#xf073; \" class=\"fa\"></Span>\r\n                                        <Span [text]=\"card.date\"></Span>\r\n                                    </FormattedString>\r\n                                </Label>\r\n                                <Label col=\"0\" row=\"1\" colSpan=\"2\" [text]=\"card.title\" textWrap=\"true\" class=\"h2 title\"></Label>\r\n                                <Label col=\"0\" row=\"2\" colSpan=\"2\" [text]=\"card.author\" textWrap=\"true\" class=\"h4 title\"></Label>\r\n                                <circular-progress-bar [col]=\"2\" [row]=\"1\" [rowSpan]=\"2\" [progress]=\"card.popularity\"></circular-progress-bar>\r\n                            </GridLayout>\r\n\r\n                        </GridLayout>\r\n                    </GridLayout>\r\n                </CardView>\r\n            </SwipeLayout>\r\n        </ios>\r\n        <StackLayout *ngIf=\"!go\" verticalAlignment=\"center\" [@fade]>\r\n            <Image src=\"~/images/empty.png\" class=\"placeholder-image\"></Image>\r\n            <Label text=\"We are going to ask you some very simple questions to find out what tool suits you best.\" textWrap=\"true\" class=\"h4 placeholder-label\" marginBottom=\"16\"></Label>\r\n            <Button text=\"Start\" class=\"btn btn-primary\" marginBottom=\"40\" (tap)=\"resetCards()\"></Button>\r\n        </StackLayout>\r\n              <StackLayout *ngIf=\"!cards.length\" verticalAlignment=\"center\" [@fade]>\r\n            <Image src=\"~/images/empty.png\" class=\"placeholder-image\"></Image>\r\n            <Label text=\"That's it! We know everything we need to. Take a look at your 'favorite' tab.\" textWrap=\"true\" class=\"h4 placeholder-label\" marginBottom=\"16\"></Label>\r\n            <Button text=\"Do it again\" class=\"btn btn-primary\" marginBottom=\"40\" (tap)=\"resetCards()\"></Button>\r\n        </StackLayout>\r\n        <ActivityIndicator verticalAlignment=\"center\" [busy]=\"!isLoaded\" class=\"activity-indicator\"></ActivityIndicator>\r\n    </GridLayout>\r\n\r\n\r\n</GridLayout>"

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,